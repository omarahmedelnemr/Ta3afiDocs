[
    {
        "endpoint":"/auth/login",
        "section":"auth",
        "method":"POST",
        "description":"Login to System, if the User Delete his Account and Then Login Again With the Same Email He Will Get a Message 'This Account Was Deleted, Please Create New Accoun'",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"the Password of the User"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "password":"omar123"
        },
        "responseExample":{
            "id": 3,
            "name": "Kariem",
            "title": "Therapest",
            "birthDate": "2001-12-10T00:00:00.000Z",
            "profileImage": "default.png",
            "gender": "male",
            "description": "This is my first email",
            "language": "en",
            "online": true,
            "starRate": 0,
            "sessionsNumber": 0,
            "email": "omarahmedelnemr20@gmail.com",
            "role": "doctor",
            "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiZW1haWwiOiJvbWFyYWhtZWRlbG5lbXIxMEBnbWFpbC5jb20iLCJyb2xlIjoicGF0aWVudCIsImlhdCI6MTY5OTczNDQxMSwiZXhwIjoxNzAwNTk4NDExfQ.H-8SzxUvSLe3Ahz9-8TboQggsdPfk9ASfaFm8lAu1XI"
        },

        "responseDescription":"Receives The User's Data 'might Differ Weather the User is Doctor or Patient or Admin', but the Common Data is userID, role, and jwt , if the Email is Wrong it Receives Not Found, if password is wrong it Receives 'Wrong Password', otherWise it Receives on of the Common Error"
    },
    {
        "endpoint":"/auth/doctor-signup",
        "section":"auth",
        "method":"POST",
        "description":"Signup or Create New Doctor Account on the System",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"the Password of the User"
            },
            {
                "paramName":"name",
                "paramType":"string",
                "paramDescription":"The Name of the Doctor"
            },
            {
                "paramName":"birthDate",
                "paramType":"string",
                "paramDescription":"The Birth Date of the Doctor"
            },
            {
                "paramName":"gender",
                "paramType":"string",
                "paramDescription":"Weather 'male' or 'female' "
            },
            {
                "paramName":"title",
                "paramType":"string",
                "paramDescription":"The Title of the Doctor, somthing Like 'Therapist', That Will Displayed of His Profile"
            },
            {
                "paramName":"description",
                "paramType":"string",
                "paramDescription":"How the Doctor Describe himself, or his Quick Summary"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "password":"omar123",
            "name":"Omar Ahmed",
            "birthDate":"2001-12-10T00:00:00.000Z",
            "gender":"male",
            "title":"Therapist",
            "description":"a Well Known Doctor"
        },
        "responseExample":"Done",

        "responseDescription":"Receives 'Done' if everything Went Well or one of the Common Error if Something Happend"
    },
    {
        "endpoint":"/auth/patient-signup",
        "section":"auth",
        "method":"POST",
        "description":"Signup or Create New Patient Account on the System",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the Patient"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"the Password of the Patient"
            },
            {
                "paramName":"name",
                "paramType":"string",
                "paramDescription":"The Name of the Patient"
            },
            {
                "paramName":"birthDate",
                "paramType":"string",
                "paramDescription":"The Birth Date of the Patient"
            },
            {
                "paramName":"gender",
                "paramType":"string",
                "paramDescription":"Weather 'male' or 'female' "
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "password":"omar123",
            "name":"Omar Ahmed",
            "birthDate":"2001-12-10T00:00:00.000Z",
            "gender":"male"
        },
        "responseExample":"Done",

        "responseDescription":"Receives 'Done' if everything Went Well or one of the Common Error if Something Happend"
    },
    {
        "endpoint":"/auth/send-confirmation-code",
        "section":"auth",
        "method":"POST",
        "description":"Send a Confirmation (Verfication Code) to user's Email",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com"
        },
        "responseExample":"Confirmation Code Sent",

        "responseDescription":"Receives a Text if the Code is Sent, or one of the common Error"
    },
    {
        "endpoint":"/auth/check-confirmation-code",
        "section":"auth",
        "method":"POST",
        "description":"Check Weather the Code is Correct or Wrong, if it is Correct, it Will send a Token, the Token Could Be Used in other Authenticated Operations like  Verify the Account or Forget Password",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            },
            {
                "paramName":"code",
                "paramType":"string",
                "paramDescription":"The Code that is Sent to User's Email"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "code":"0951"
        },
        "responseExample":{
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9tYXJhaG1lZGVsbmVtcjIwQGdtYWlsLmNvbSIsImlhdCI6MTcwMTYyODA4NiwiZXhwIjoxNzAxNjI5ODg2fQ.uJj4fZLGDD5VADaM4R3iiu8Covl9m5N9K3roq6HMUMM"
        },

        "responseDescription":"Receives a Token For Auth if the Code is Correct (the Token Has 30 Minutes Validation Limit),or 'Wrong Code' if the Code is Wrong, or 'Code Expired' if the Code passes the Valid Duration (probably 2 minuts), or one of the common Errors"
    },
    {
        "endpoint":"/auth/reset-password",
        "section":"auth",
        "method":"POST",
        "description":"Used to Reset The Password with a Token (retrieved From Check Code Endpoint) and New Password",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            },
            {
                "paramName":"token",
                "paramType":"string",
                "paramDescription":"The Token Sent in Check Confirm Code Endpoint,Hait has 30 Minutes Validation Limit"
            },
            {
                "paramName":"newPassword",
                "paramType":"string",
                "paramDescription":"The New Password"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9tYXJhaG1lZGVsbmVtcjIwQGdtYWlsLmNvbSIsImlhdCI6MTcwMTYyODA4NiwiZXhwIjoxNzAxNjI5ODg2fQ.uJj4fZLGDD5VADaM4R3iiu8Covl9m5N9K3roq6HMUMM",
            "newPassword":"testPassword1"
        },
        "responseExample":"Confirmation Code Sent",

        "responseDescription":"Receives 'Password Reseted Successfully' Text if Everything Went Well, 'Not Authorized' if the Secret Code is Wrong , or one of the common Errors"
    },
    {
        "endpoint":"/auth/verify-account",
        "section":"auth",
        "method":"POST",
        "description":"Used to Verify User Account",
        "parameters":[
            {
                "paramName":"email",
                "paramType":"string",
                "paramDescription":"The Email of the User"
            },
            {
                "paramName":"token",
                "paramType":"string",
                "paramDescription":"The Token Sent in Check Confirm Code Endpoint,Hait has 30 Minutes Validation Limit"
            }
            
        ],
        "requestExample":{
            "email":"omar@gmail.com",
            "token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im9tYXJhaG1lZGVsbmVtcjIwQGdtYWlsLmNvbSIsImlhdCI6MTcwMTYyODA4NiwiZXhwIjoxNzAxNjI5ODg2fQ.uJj4fZLGDD5VADaM4R3iiu8Covl9m5N9K3roq6HMUMM"
        },
        "responseExample":"Confirmation Code Sent",

        "responseDescription":"Receives 'Account Verified' Text if Everything Went Well, 'Not Authorized' if the Token is invalid , or one of the common Errors"
    }




    
]